<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="WINCTRL-RP1RR65" ignored="0" tests="16" failures="0" timestamp="20 Aug 2020 10:28:07 GMT" time="0.275" errors="0">
  <testcase name="@BeforeTest beforeAllTest" time="0.046" classname="TS_Login_01">
    <failure type="java.lang.Error" message="Unresolved compilation problems: 
	XSSFWorkbook cannot be resolved to a type
	XSSFWorkbook cannot be resolved to a type
	XSSFSheet cannot be resolved to a type
	Row cannot be resolved to a type
">
      <![CDATA[java.lang.Error: Unresolved compilation problems: 
XSSFWorkbook cannot be resolved to a type
XSSFWorkbook cannot be resolved to a type
XSSFSheet cannot be resolved to a type
Row cannot be resolved to a type

at MoneySuperMarketInputs.loadExcel(MoneySuperMarketInputs.java:25)
at TS_Login_01.beforeAllTest(TS_Login_01.java:19)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeAllTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@BeforeMethod beforeEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeEachTest -->
  <testcase name="@AfterMethod afterEachTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTest -->
  <testcase name="@AfterTest afterAllTest" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- @AfterTest afterAllTest -->
  <testcase name="testcas_14" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcas_14 -->
  <testcase name="testcase_01" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_01 -->
  <testcase name="testcase_02" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_02 -->
  <testcase name="testcase_03" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_03 -->
  <testcase name="testcase_04" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_04 -->
  <testcase name="testcase_05" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_05 -->
  <testcase name="testcase_06" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_06 -->
  <testcase name="testcase_07" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_07 -->
  <testcase name="testcase_08" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_08 -->
  <testcase name="testcase_09" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_09 -->
  <testcase name="testcase_10" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_10 -->
  <testcase name="testcase_11" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_11 -->
  <testcase name="testcase_12" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_12 -->
  <testcase name="testcase_13" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_13 -->
  <testcase name="testcase_15" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_15 -->
  <testcase name="testcase_16" time="0.0" classname="TS_Login_01">
    <skipped/>
  </testcase> <!-- testcase_16 -->
</testsuite>
